// packages/kassa-app-example/seed.js
const path = require('path');
const WiseJSON = require('wise-json-db/wise-json');
const bcrypt = require('bcrypt');

const DB_PATH = path.resolve(__dirname, 'wise-db-data');

const initialPositions = [
    { "id": 1, "name": "–•–ª–µ–± –ë–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π", "price": "45.50" },
    { "id": 2, "name": "–ú–æ–ª–æ–∫–æ 3.2%", "price": "80.00" },
    { "id": 3, "name": "–°—ã—Ä –†–æ—Å—Å–∏–π—Å–∫–∏–π", "price": "250.75" },
    { "id": 4, "name": "–ö–µ—Ñ–∏—Ä 1%", "price": "75.00" },
    { "id": 5, "name": "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", "price": "180.00" }
];

async function seedDatabase() {
    console.log(`üå± –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤: ${DB_PATH}`);
    const db = new WiseJSON(DB_PATH);
    await db.init();

    try {
        const positionsCol = await db.getCollection('positions');
        await positionsCol.clear();
        await positionsCol.insertMany(initialPositions);
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "positions" –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ ${await positionsCol.count()} –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.`);

        console.log('üë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...');
        const userCol = await db.getCollection('user');
        await userCol.clear();
        
        const saltRounds = 10;
        const password = '123';
        const passwordHash = await bcrypt.hash(password, saltRounds);

        const userData = {
            login: 'kassir',
            passwordHash: passwordHash,
            name: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
            role: "–ö–∞—Å—Å–∏—Ä"
        };
        await userCol.insert(userData);
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "kassir" —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º "${password}".`);

        const sessionCol = await db.getCollection('sessions');
        await sessionCol.clear();
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "sessions" –æ—á–∏—â–µ–Ω–∞.`);

        const receiptCol = await db.getCollection('receipt');
        await receiptCol.clear();
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "receipt" –æ—á–∏—â–µ–Ω–∞.`);

    } catch (error) {
        console.error('üî• –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã:', error);
    } finally {
        await db.close();
        console.log('‚ú® –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
    }
}

seedDatabase();